diy-aplr - An automated license plate reader built w/ Raspberry Pi

This program runs on a Raspberry Pi, allowing it to continuously capture photographs of license plates and GPS coordinates. Recognized license plate numbers in the captured photos are scanned and output to CSV or JSON, along with GPS coordinates and date/time information. The application is multi-threaded and designed to capture at high speed (3-5 images/sec). The Rapsberry Pi can't recognize as fast as it can capture images, so images are queued up in a capture directory and worked through as fast as the recognizer is able.

COMPONENTS
----------
diy-lpr - main application
gpspoll - reads coordinates from an attached GPS device
camcap - continuously captures images from the camera (requires a GPS lock)
recognizer - performs ALPR recognition on captured images

REQUIRED HARDWARE
-----------------
1. Raspberry Pi - Tested Pi 3 Model B
2. GPS - Tested with w/ AdaFruit GPS Hat and external antenna
3. Camera - Tested with Raspberry Pi Camera V2

SOFTWARE DEPENDENCIES
---------------------
1. Python 2.7.x
2. OpenALPR
3. Non-standard Python libraries: gps, exifread, openalpr, picamera

CONFIGURING DIY-ALPR
--------------------
Edit src/diy-lpr.py. Edit any variables between 'BEGIN DIY-ALPR CONFIG' and 'END DIY-ALPR CONFIG' that need changing. You can also tweak camera settings between 'BEGIN CAMERA CONFIG' and 'END CAMERA CONFIG'

RUNNING DIY-APLR
----------------
   diy-alpr$ python src/diy-lpr.py

If you want to run in background and capture a log file, use:

    diy-alpr$ nohup python src/diy-lpr.py >> work/diy-lpr.log 2>&1 &

The program will output various status information and errors to keep you apprised of its activies.

If you have a capture_ctl file set up, you will need to make sure this file exists. diy-alpr will only capture images while this file is in place. To start capture:

    diy-alpr$ touch work/capture_ctl

To stop capture:

    diy-alpr$ rm work/capture_ctl

RUNNING DIY-ALPR ON BOOT
------------------------
On Raspbian, edit /etc/rc.local and add:

  sudo -u USER_TO_RUN_AS python PATH_TO_DIY_ALPR/src/diy-lpr.py >> PATH_TO_DIY_ALPR/work/diy-lpr.log 2>&1 &
